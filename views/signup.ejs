<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Sign Up Page</title>
    <style>
       body {
            font-family: Arial, sans-serif;
            background-image: url(/images/signup_bg\ pic.png);
            background-size: cover;
            margin: 0;
            padding: 0;
        }
        .container {
            max-width: 400px;
            margin: 50px auto;
            padding: 20px;
            background-color:#f0ecec;
            border-radius: 8px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }
        h2 {
            text-align: center;
            margin-bottom: 20px;
        }
        input[type="text"],
        input[type="email"],
        input[type="tel"],
        input[type="password"],
        textarea,
        input[type="submit"] {
            width: 100%;
            padding: 10px;
            margin-bottom: 15px;
            border: 1px solid #ccc;
            border-radius: 4px;
            box-sizing: border-box;
        }
        input[type="submit"] {
            background-color: rgba(199, 75, 71, 0.84);
            color: white;
            cursor: pointer;
        }
        input[type="submit"]:hover {
            background-color: #f3d29d;
        }
    </style>
</head>

<body>
    <div class="container">
        <h2>Sign Up</h2>
        <form id="signupForm" method="POST" action="http://localhost:3000/user/signup">
            <input type="text" name="firstname" placeholder="First Name" pattern="[A-Za-z]+"
                title="Only letters allowed" required>
            <input type="text" name="lastname" placeholder="Last Name" pattern="[A-Za-z]+( [A-Za-z]+)*"
                title="Only letters allowed" required>
            <input type="email" name="email" placeholder="Email ID" required>
            <input type="text" name="username" placeholder="Username" pattern="[A-Za-z0-9]+"
                title="Only letters and numbers allowed" required>
            <input type="password" name="password" placeholder="Password" pattern=".{8,12}"
                title="Password must be between 8 and 12 characters" required>
            <input type="tel" name="phone" placeholder="Phone Number" pattern="[0-9]{10}"
                title="Phone number must be 10 digits" required>
            <textarea name="address" placeholder="Address" maxlength="100" required></textarea>
            <button id="submitbtn">Submit</button>
        </form>
        <p>Already have an account? <a href="http://localhost:3000/login">Login</a></p>
    </div>

    <script>
        const params = new URLSearchParams(window.location.search);
        const alertMessage = params.get('alert');
        if (alertMessage) {
            alert(decodeURIComponent(alertMessage));
        }

        
        const signupForm = document.getElementById('signupForm');
        const submitbtn = document.getElementById('submitbtn');

        signupForm.addEventListener('submitbtn', function (event) {
            event.preventDefault();
            if (!signupForm.checkValidity()) {
                // Form is invalid, show error messages
                displayErrorMessage("Please fill out all fields correctly.");
                return;
            }

            // Additional JavaScript validation before submitting the form
            const emailInput = signupForm.elements['email'];
            const phoneInput = signupForm.elements['phone'];

            // Validate email format
            const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
            if (!emailRegex.test(emailInput.value)) {
                displayErrorMessage("Please enter a valid email address.");
                return;
            }

            // Validate phone number format
            const phoneRegex = /^\d{10}$/;
            if (!phoneRegex.test(phoneInput.value)) {
                displayErrorMessage("Please enter a 10-digit phone number.");
                return;
            }

            // Extract the action URL from the form element
            const actionUrl = signupForm.getAttribute('action');

            // Make POST request
            fetch("http://localhost:3000/user/signup", {
                    method: "POST",
                    body: formData
                })
                    .then(response => {
                        if (!response.ok) {
                            throw new Error("Network response was not ok");
                        }
                        return response.text();
                    })
                    .then(data => {
                        // Handle response data
                        console.log(data);
                        // Optionally, redirect to another page or perform other actions
                    })
                    .catch(error => {
                        console.error("There was a problem with the fetch operation:", error);
                        // Handle errors
                    });
            });
        function displayErrorMessage(message) {
            // Display error message to the user
            const errorDiv = document.createElement('div');
            errorDiv.classList.add('error');
            errorDiv.textContent = message;
            signupForm.insertBefore(errorDiv, signupForm.firstChild);

            // Remove error message after 3 seconds
            setTimeout(function () {
                errorDiv.remove();
            }, 10000);
        }
    </script>



</body>

</html>
